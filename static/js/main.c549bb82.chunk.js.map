{"version":3,"sources":["store/surveySlice.js","component/home.js","component/ansBox1.js","component/single.js","component/ansBox.js","component/multiple.js","component/question.js","component/createsurvey.js","component/confrim.js","component/takesurvey.js","component/App.js","store/store.js","reportWebVitals.js","index.js"],"names":["newSurvey","createAsyncThunk","_","thunkAPI","a","console","log","getState","id","length","surveySlice","createSlice","name","initialState","reducers","addQuestion","state","action","payload","surveyId","type","options","question","find","s","questions","error","push","isPublished","q","qId","String","markPublished","extraReducers","fulfilled","App","history","useHistory","dispatch","useDispatch","startSurvey","then","unwrapResult","className","onClick","style","padding","to","AnsBox","props","useState","InputGroup","Input","placeholder","onChange","e","addAns1","target","value","idx","InputGroupAddon","addonType","InputGroupText","Single","params","useParams","setOptions","setQuestion","removeAns","addQ","actions","setDefault","trim","margin","addAns","Multiple","splice","map","ans1","Question","setOption","option","Create","dropdownOpen","setDropdownOpen","Dropdown","isOpen","toggle","prevState","DropdownToggle","width","caret","DropdownMenu","DropdownItem","paddingTop","ConfirmSurvey","survey","useSelector","globalStore","Button","TakeSurvey","alt","src","path","render","store","configureStore","reducer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c549bb82.chunk.js","sourcesContent":["import {createSlice,createAsyncThunk} from \"@reduxjs/toolkit\"\r\n\r\nexport const newSurvey= createAsyncThunk(\"surveys/newSurvey\",\r\n      async (_,thunkAPI)=>{\r\n          console.log(thunkAPI.getState())\r\n          const id= thunkAPI.getState().length+1;\r\n          return id;\r\n      })\r\n\r\nexport const surveySlice = createSlice({\r\n    name:\"surveys\",\r\n    initialState:[],\r\n    reducers:{\r\n        addQuestion:(state,action)=>{ \r\n        const { surveyId, type, options, question } = action.payload;\r\n      console.log(surveyId);\r\n      \r\n        try {\r\n            const q= state.find((s) => s.surveyId == surveyId).questions;\r\n        } catch (error) {\r\n            state.push({ questions: [],\r\n                surveyId: 1,\r\n                isPublished: false})\r\n        }\r\n        const q=state.find((s) => s.surveyId == surveyId).questions;\r\n        const qId = String(q.length + 1);\r\n        q.push({\r\n          qId,\r\n          type,\r\n          question,\r\n          options,\r\n        });},\r\n        markPublished:(state,action)=>{state.find((s)=>s.surveyId == action.payload.surveyId).isPublished=true}\r\n    },\r\n    extraReducers:{\r\n        [newSurvey.fulfilled]:(state,action)=>{\r\n            state.push({ questions: [],\r\n                surveyId: action.payload,\r\n                isPublished: false})\r\n        }\r\n    }\r\n})\r\n","import { Link ,useHistory} from 'react-router-dom';\r\nimport '../style/App.css';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { surveySlice, newSurvey } from \"../store/surveySlice\";\r\nimport { unwrapResult } from \"@reduxjs/toolkit\";\r\nimport { useState } from 'react';\r\n\r\n\r\nfunction App() {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n \r\n  const startSurvey=async()=>{\r\n    await dispatch(newSurvey()).then(unwrapResult).then((id)=>history.push(`/create/${id}`))\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      <Link onClick={startSurvey} style={{padding:'10px'}}><button  className=\"create-take\">Create survey</button></Link>\r\n      <Link  to=\"/takesurvey\" style={{padding:'10px'}}><button className=\"create-take\">Take survey</button></Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React,{useState} from \"react\";\r\nimport { InputGroup, InputGroupAddon, InputGroupText, Input } from 'reactstrap';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { surveySlice } from \"../store/surveySlice\";\r\n\r\nexport default function AnsBox(props){\r\n  const [value,setValue]= useState(\"\");\r\n  \r\n    return (<>\r\n    <InputGroup>\r\n        <Input placeholder=\"Type your answer here\" onChange={(e)=>props.addAns1(e.target.value,props.idx)}/>\r\n        <div className=\"plusminus1\" >\r\n        <InputGroupAddon  addonType=\"prepend\">\r\n          <InputGroupText ><b>+</b></InputGroupText>\r\n        </InputGroupAddon>\r\n        </div>\r\n        <div  className=\"plusminus1\">\r\n        <InputGroupAddon  addonType=\"prepend\" >\r\n          <InputGroupText ><b>-</b></InputGroupText>\r\n        </InputGroupAddon>\r\n        </div>\r\n      </InputGroup>\r\n      <br></br>\r\n      \r\n      </>)\r\n}","import React, { useState } from 'react';\r\nimport { InputGroup, InputGroupAddon, InputGroupText, Input } from 'reactstrap';\r\nimport AnsBox from './ansBox1';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { surveySlice } from \"../store/surveySlice\";\r\nimport {useHistory,useParams} from \"react-router-dom\"\r\n\r\n\r\nexport default function Single(props){\r\n  const history= useHistory();\r\n  const params = useParams();\r\n  const [options,setOptions]=useState([\"\"]);\r\n    const dispatch = useDispatch();\r\n    const [question,setQuestion]=useState(\"\");\r\n    const removeAns=()=>{\r\n      if(options.length>1){\r\n          return null;\r\n      }\r\n  }\r\n  const addQ=()=>{\r\n    \r\n    const payload = {\r\n       options,\r\n      question,\r\n       surveyId: params.surveyId,\r\n      type: \"single\",\r\n    };\r\n    dispatch(surveySlice.actions.addQuestion(payload));\r\n    props.setDefault();\r\n    // setQuestion(\"\")\r\n    // setOptions([\"\"])\r\n}\r\nconst addAns1=(value,idx)=>{\r\n  //  console.log(options)\r\n      if(options.length<4 && value.trim().length!==0){\r\n        options[idx]=value;\r\n        \r\n        setOptions([...options])   \r\n      }\r\n      if(options.length===4){\r\n        options[idx]=value\r\n        setOptions([...options])   \r\n      }\r\n  }\r\n  const publish=()=>{\r\n    addQ()\r\n    history.push(\"/ConfirmSurvey/\"+params.surveyId)\r\n  }\r\n\r\n\r\n    return <div>\r\n        <InputGroup>\r\n        <InputGroupAddon addonType=\"prepend\">\r\n          <InputGroupText>?</InputGroupText>\r\n        </InputGroupAddon>\r\n        <Input placeholder=\"Type your question here\" onChange={(e)=>setQuestion(e.target.value)}/>\r\n      </InputGroup>\r\n      <br></br>\r\n      <h6>Options</h6>\r\n      <br></br>\r\n      <AnsBox  addAns1={addAns1}  idx={0} removeAns={removeAns}/>\r\n      <br></br>\r\n      <AnsBox  addAns1={addAns1}  idx={1} removeAns={removeAns}/>\r\n     \r\n      <><button className=\"create-take\" style={{margin:\"20px\"}} onClick={addQ}>Add Question</button>\r\n        <button className=\"create-take\" style={{margin:\"20px\"}} onClick={publish}>Publish</button>\r\n      </>\r\n    </div>\r\n}","import React,{useState} from \"react\";\r\nimport { InputGroup, InputGroupAddon, InputGroupText, Input } from 'reactstrap';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { surveySlice } from \"../store/surveySlice\";\r\n\r\nexport default function AnsBox(props){\r\n  const [value,setValue]= useState(\"\");\r\n  \r\n    return (<>\r\n    <InputGroup>\r\n        <Input placeholder=\"Type your answer here\" onChange={(e)=>props.addAns1(e.target.value,props.idx)}/>\r\n        <div className=\"plusminus1\" onClick={()=>props.addAns()}>\r\n        <InputGroupAddon  addonType=\"prepend\">\r\n          <InputGroupText className=\"plusminus\"><b>+</b></InputGroupText>\r\n        </InputGroupAddon>\r\n        </div>\r\n        <div  className=\"plusminus1\">\r\n        <InputGroupAddon  addonType=\"prepend\" onClick={()=>props.removeAns(props.idx)}>\r\n          <InputGroupText className=\"plusminus\"><b>-</b></InputGroupText>\r\n        </InputGroupAddon>\r\n        </div>\r\n      </InputGroup>\r\n      <br></br>\r\n      \r\n      </>)\r\n}","import React, { useState } from 'react';\r\nimport { InputGroup, InputGroupAddon, InputGroupText, Input } from 'reactstrap';\r\nimport AnsBox from \"./ansBox\"\r\nimport { useDispatch } from \"react-redux\";\r\nimport { surveySlice } from \"../store/surveySlice\";\r\nimport {useHistory,useParams} from \"react-router-dom\"\r\n\r\n\r\n\r\nexport default function Multiple(props){\r\n  const history = useHistory();\r\n  const params = useParams()\r\n \r\n    const [options,setOptions]=useState([\"\"]);\r\n    const dispatch = useDispatch();\r\n    \r\n    const [question,setQuestion]=useState();\r\n\r\n    const addAns=()=>{\r\n      //console.log(options)\r\n        if(options.length<4 ){\r\n          options.push(\"\")\r\n          setOptions([...options])   \r\n        }\r\n        \r\n    }\r\n    const addAns1=(value,idx)=>{\r\n    //  console.log(options)\r\n        if(options.length<4 && value.trim().length!==0){\r\n          options[idx]=value;\r\n          \r\n          setOptions([...options])   \r\n        }\r\n        if(options.length===4){\r\n          options[idx]=value\r\n          setOptions([...options])   \r\n        }\r\n    }\r\n    const removeAns=(idx)=>{\r\n        if(options.length>1){\r\n            options.splice(idx,1);\r\n            setOptions([...options])\r\n        }\r\n    }\r\n    const addQ=()=>{\r\n     \r\n        const payload = {\r\n           options,\r\n          question,\r\n           surveyId: params.surveyId,\r\n          type: \"multiple\",\r\n        };\r\n        dispatch(surveySlice.actions.addQuestion(payload));\r\n        props.setDefault();\r\n        // setQuestion(\"\")\r\n        // setOptions([\"\"])\r\n    }\r\n\r\n    const publish=()=>{\r\n      addQ()\r\n      history.push(\"/ConfirmSurvey/\"+params.surveyId)\r\n    }\r\n\r\n\r\n    return (<div>\r\n        <InputGroup>\r\n        <InputGroupAddon addonType=\"prepend\">\r\n          <InputGroupText>?</InputGroupText>\r\n        </InputGroupAddon>\r\n        <Input placeholder=\"Type your question here\"   value={question} onChange={(e)=>setQuestion(e.target.value)}/>\r\n      </InputGroup>\r\n      <br></br>\r\n      <h6>Options</h6>\r\n     \r\n      <br></br>\r\n      \r\n      {options.map((ans1,idx)=>(<AnsBox addAns={addAns} addAns1={addAns1} key={idx} idx={idx} removeAns={removeAns}/>))}\r\n      {options.length>=4?<><button className=\"create-take\" style={{margin:\"20px\"}} onClick={addQ}>Add Question</button>\r\n        <button className=\"create-take\" style={{margin:\"20px\"}} onClick={publish}>Publish</button>\r\n        </>:console.log(options.length)}\r\n     \r\n      </div>)\r\n}","import React, { useState } from 'react';\r\nimport Single from \"./single\"\r\nimport Multiple from \"./multiple\"\r\n\r\nconst Question= (props)=>{\r\n    const setDefault=()=>{\r\n      props.setOption();\r\n\r\n    }\r\n    if(props.option===\"Select Question Type\"){\r\n      return null;\r\n    }else if (props.option===\"Multi-select\"){\r\n      return <Multiple setDefault={setDefault}/>\r\n    }else{\r\n      return <Single setDefault={setDefault}/>\r\n    }\r\n  }\r\n\r\nexport default Question;","import React, { useState } from 'react';\r\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\nimport Question from \"./question\"\r\nconst Create = (props) => {\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const [option,setOption] = useState(\"Select Question Type\")\r\n  const toggle = () => setDropdownOpen(prevState => !prevState);\r\n\r\n  return (<div className=\"create-page\">\r\n    <div>\r\n    <Dropdown isOpen={dropdownOpen} toggle={toggle}>\r\n      <DropdownToggle style={{width:\"200px\"}} caret>\r\n        {option}\r\n        </DropdownToggle>\r\n      <DropdownMenu>\r\n        <DropdownItem style={{width:\"200px\"}} onClick={()=>setOption(\"Multi-select\")}>Multi-select</DropdownItem>\r\n        <DropdownItem style={{width:\"200px\"}} onClick={()=>setOption(\"Single-select\")}>Single-select</DropdownItem>\r\n      </DropdownMenu>\r\n    </Dropdown>\r\n    </div>\r\n    <div style={{paddingTop:\"50px\",width:\"400px\"}}><Question option={option} setOption={()=>setOption(\"Select Question Type\")}/></div>\r\n      </div>);\r\n}\r\n\r\nexport default Create;","import React from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Button } from \"reactstrap\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { surveySlice } from \"../store/surveySlice\";\r\n\r\nfunction ConfirmSurvey() {\r\n  const { surveyId } = useParams();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const survey = useSelector((globalStore) =>\r\n\r\n    globalStore.find((s) => s.surveyId == surveyId)\r\n  );\r\n  console.log(survey)\r\n  const confirmAndPublishSurvey = () => {\r\n    dispatch(surveySlice.actions.markPublished({ surveyId }));\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {survey.questions.map((q) => (\r\n        <>\r\n          <h4>{q.question}</h4>\r\n          {q.type === \"single\" ? (\r\n            <>\r\n              <label>{q.options[0]}</label>\r\n              <input type=\"radio\" />\r\n              <label>{q.options[1]}</label>\r\n              <input type=\"radio\" />\r\n            </>\r\n          ) : (\r\n            <>\r\n              <label>{q.options[0]}</label>\r\n              <input type=\"checkbox\" />\r\n              <label>{q.options[1]}</label>\r\n              <input type=\"checkbox\" />\r\n              <label>{q.options[2]}</label>\r\n              <input type=\"checkbox\" />\r\n              <label>{q.options[3]}</label>\r\n              <input type=\"checkbox\" />\r\n            </>\r\n          )}\r\n          <hr/>\r\n        </>\r\n      ))}\r\n      <Button className=\"survey-main-btn\" onClick={confirmAndPublishSurvey}>\r\n        Confirm Survey\r\n      </Button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ConfirmSurvey;\r\n","import React from \"react\";\r\n\r\nexport default function TakeSurvey(props){\r\n    return (\r\n        <h1>This section is under construction</h1>\r\n    )\r\n}","import '../style/App.css';\nimport Home from \"./home\";\nimport Create from \"./createsurvey\";\nimport ConfirmSurvey from \"./confrim\"\nimport TakeSurvey from \"./takesurvey\"\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div><img alt=\"survery tiger\"  src=\"https://raw.githubusercontent.com/gourav310/simple-survey-app/main/src/logo.png\"/></div>\n      <Switch >\n          <Route path=\"/create/:surveyId\" render={()=>(<Create />)}></Route>\n          <Route path=\"/takesurvey\" render={()=>(<TakeSurvey />)}></Route>\n          <Route path=\"/confirmSurvey/:surveyId\" render={()=>(<ConfirmSurvey />)}></Route>\n          <Route path=\"/\" render={()=>(<Home />)}></Route>\n      </Switch >\n    </div>\n  );\n}\n\nexport default App;\n","// import { combineReducers } from \"redux\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport { surveySlice } from \"./surveySlice\";\r\n\r\nexport const store = configureStore({reducer:surveySlice.reducer})","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/App.css';\nimport App from './component/App';\nimport { Provider } from 'react-redux'\nimport {store} from \"./store/store\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  BrowserRouter as Router,\n \n} from \"react-router-dom\";\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <Router >\n    <App />\n    </Router >\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}